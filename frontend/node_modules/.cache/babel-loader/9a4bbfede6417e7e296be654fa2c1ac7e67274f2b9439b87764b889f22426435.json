{"ast":null,"code":"var _jsxFileName = \"/Users/weather-app-pwa/frontend/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Form, Button, Card, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Function to convert VAPID key from URL safe base64 to Uint8Array\n  function urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n  const publicVapidKey = process.env.REACT_APP_PUBLIC_VAPID_KEY; // Ensure this is set in your environment variables\n\n  const subscribeUser = async () => {\n    if ('serviceWorker' in navigator) {\n      try {\n        const registration = await navigator.serviceWorker.ready;\n        const subscription = await registration.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n        });\n        await fetch('/subscribe', {\n          method: 'POST',\n          body: JSON.stringify(subscription),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        alert(\"Subscribed!\");\n      } catch (error) {\n        console.error('Error subscribing to notifications:', error);\n        setError('Failed to subscribe to notifications.');\n      }\n    }\n  };\n  const handleInputChange = e => {\n    setCity(e.target.value);\n  };\n  const fetchWeather = async e => {\n    e.preventDefault();\n    setError(null); // Clear previous errors\n    try {\n      const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch weather data');\n      }\n      const data = await response.json();\n      setWeather(data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"p-3\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: fetchWeather,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"cityName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Enter city name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"City name\",\n              value: city,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Get Weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: subscribeUser,\n            className: \"ml-2\",\n            children: \"Subscribe for Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }, this), weather && /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: weather.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Temperature: \", weather.main.temp, \" \\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this), \"Weather: \", weather.weather[0].description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this), \"Humidity: \", weather.main.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"lOgw79/1w+XLH67eY5z/HdeAAM0=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Form","Button","Card","Alert","jsxDEV","_jsxDEV","Weather","_s","city","setCity","weather","setWeather","error","setError","urlBase64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","publicVapidKey","process","env","REACT_APP_PUBLIC_VAPID_KEY","subscribeUser","navigator","registration","serviceWorker","ready","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","fetch","method","body","JSON","stringify","headers","alert","console","handleInputChange","e","target","value","fetchWeather","preventDefault","apiKey","REACT_APP_OPENWEATHER_API_KEY","url","response","ok","Error","data","json","message","className","children","xs","md","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","variant","onClick","Body","Title","name","Text","main","temp","description","humidity","_c","$RefreshReg$"],"sources":["/Users/weather-app-pwa/frontend/src/Weather.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Row, Col, Form, Button, Card, Alert } from 'react-bootstrap';\n\nconst Weather = () => {\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState(null);\n    const [error, setError] = useState(null);\n\n    // Function to convert VAPID key from URL safe base64 to Uint8Array\n    function urlBase64ToUint8Array(base64String) {\n        const padding = '='.repeat((4 - base64String.length % 4) % 4);\n        const base64 = (base64String + padding)\n            .replace(/\\-/g, '+')\n            .replace(/_/g, '/');\n    \n        const rawData = window.atob(base64);\n        const outputArray = new Uint8Array(rawData.length);\n    \n        for (let i = 0; i < rawData.length; ++i) {\n            outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    }\n\n    const publicVapidKey = process.env.REACT_APP_PUBLIC_VAPID_KEY;  // Ensure this is set in your environment variables\n\n    const subscribeUser = async () => {\n        if ('serviceWorker' in navigator) {\n            try {\n                const registration = await navigator.serviceWorker.ready;\n                const subscription = await registration.pushManager.subscribe({\n                    userVisibleOnly: true,\n                    applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n                });\n                await fetch('/subscribe', {\n                    method: 'POST',\n                    body: JSON.stringify(subscription),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n                alert(\"Subscribed!\");\n            } catch (error) {\n                console.error('Error subscribing to notifications:', error);\n                setError('Failed to subscribe to notifications.');\n            }\n        }\n    };\n\n    const handleInputChange = (e) => {\n        setCity(e.target.value);\n    };\n\n    const fetchWeather = async (e) => {\n        e.preventDefault();\n        setError(null);  // Clear previous errors\n        try {\n            const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n            const response = await fetch(url);\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch weather data');\n            }\n\n            const data = await response.json();\n            setWeather(data);\n        } catch (error) {\n            console.error(\"Error fetching weather data:\", error);\n            setError(error.message);\n        }\n    };\n\n    return (\n        <Container className=\"p-3\">\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    <Form onSubmit={fetchWeather}>\n                        <Form.Group controlId=\"cityName\">\n                            <Form.Label>Enter city name</Form.Label>\n                            <Form.Control \n                                type=\"text\" \n                                placeholder=\"City name\" \n                                value={city} \n                                onChange={handleInputChange} \n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Get Weather\n                        </Button>\n                        <Button variant=\"secondary\" onClick={subscribeUser} className=\"ml-2\">\n                            Subscribe for Notifications\n                        </Button>\n                    </Form>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    {weather && (\n                        <Card className=\"mt-3\">\n                            <Card.Body>\n                                <Card.Title>{weather.name}</Card.Title>\n                                <Card.Text>\n                                    Temperature: {weather.main.temp} °C\n                                    <br />\n                                    Weather: {weather.weather[0].description}\n                                    <br />\n                                    Humidity: {weather.main.humidity}%\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}