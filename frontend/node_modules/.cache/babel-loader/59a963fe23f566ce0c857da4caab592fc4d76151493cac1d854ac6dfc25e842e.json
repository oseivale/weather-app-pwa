{"ast":null,"code":"var _jsxFileName = \"/Users/weather-app-pwa/frontend/src/InstallPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InstallPrompt() {\n  _s();\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\n  const [showInstallBtn, setShowInstallBtn] = useState(false);\n  useEffect(() => {\n    const handleBeforeInstallPrompt = e => {\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault();\n      // Stash the event so it can be triggered later.\n      setDeferredPrompt(e);\n      // Update UI to show the install button\n      setShowInstallBtn(true);\n    };\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    };\n  }, []);\n  const handleInstallClick = () => {\n    // Show the install prompt\n    if (deferredPrompt) {\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then(choiceResult => {\n        if (choiceResult.outcome === 'accepted') {\n          console.log('User accepted the install prompt');\n        } else {\n          console.log('User dismissed the install prompt');\n        }\n        setDeferredPrompt(null);\n        setShowInstallBtn(false);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showInstallBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInstallClick,\n      children: \"Install\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(InstallPrompt, \"chpRl/6kmnHuSzdqQSn9uU+7OVo=\");\n_c = InstallPrompt;\nexport default InstallPrompt;\nvar _c;\n$RefreshReg$(_c, \"InstallPrompt\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","InstallPrompt","_s","deferredPrompt","setDeferredPrompt","showInstallBtn","setShowInstallBtn","handleBeforeInstallPrompt","e","preventDefault","window","addEventListener","removeEventListener","handleInstallClick","prompt","userChoice","then","choiceResult","outcome","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/weather-app-pwa/frontend/src/InstallPrompt.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction InstallPrompt() {\n    const [deferredPrompt, setDeferredPrompt] = useState(null);\n    const [showInstallBtn, setShowInstallBtn] = useState(false);\n\n    useEffect(() => {\n        const handleBeforeInstallPrompt = (e) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            // Stash the event so it can be triggered later.\n            setDeferredPrompt(e);\n            // Update UI to show the install button\n            setShowInstallBtn(true);\n        };\n\n        window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n\n        return () => {\n            window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n        };\n    }, []);\n\n    const handleInstallClick = () => {\n        // Show the install prompt\n        if (deferredPrompt) {\n            deferredPrompt.prompt();\n            // Wait for the user to respond to the prompt\n            deferredPrompt.userChoice.then((choiceResult) => {\n                if (choiceResult.outcome === 'accepted') {\n                    console.log('User accepted the install prompt');\n                } else {\n                    console.log('User dismissed the install prompt');\n                }\n                setDeferredPrompt(null);\n                setShowInstallBtn(false);\n            });\n        }\n    };\n\n    return (\n        <div>\n            {showInstallBtn && (\n                <button onClick={handleInstallClick}>\n                    Install\n                </button>\n            )}\n        </div>\n    );\n}\n\nexport default InstallPrompt;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACZ,MAAMS,yBAAyB,GAAIC,CAAC,IAAK;MACrC;MACAA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB;MACAL,iBAAiB,CAACI,CAAC,CAAC;MACpB;MACAF,iBAAiB,CAAC,IAAI,CAAC;IAC3B,CAAC;IAEDI,MAAM,CAACC,gBAAgB,CAAC,qBAAqB,EAAEJ,yBAAyB,CAAC;IAEzE,OAAO,MAAM;MACTG,MAAM,CAACE,mBAAmB,CAAC,qBAAqB,EAAEL,yBAAyB,CAAC;IAChF,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;IAC7B;IACA,IAAIV,cAAc,EAAE;MAChBA,cAAc,CAACW,MAAM,CAAC,CAAC;MACvB;MACAX,cAAc,CAACY,UAAU,CAACC,IAAI,CAAEC,YAAY,IAAK;QAC7C,IAAIA,YAAY,CAACC,OAAO,KAAK,UAAU,EAAE;UACrCC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QACnD,CAAC,MAAM;UACHD,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QACpD;QACAhB,iBAAiB,CAAC,IAAI,CAAC;QACvBE,iBAAiB,CAAC,KAAK,CAAC;MAC5B,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAqB,QAAA,EACKhB,cAAc,iBACXL,OAAA;MAAQsB,OAAO,EAAET,kBAAmB;MAAAQ,QAAA,EAAC;IAErC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACxB,EAAA,CA/CQD,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAiDtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}