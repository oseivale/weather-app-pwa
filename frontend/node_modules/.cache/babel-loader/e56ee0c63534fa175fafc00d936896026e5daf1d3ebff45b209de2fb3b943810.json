{"ast":null,"code":"import React,{useState}from'react';import{Container,Row,Col,Form,Button,Card,Alert}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Weather=()=>{const[city,setCity]=useState('');const[weather,setWeather]=useState(null);const[error,setError]=useState(null);// Function to convert VAPID key from URL safe base64 to Uint8Array\nfunction urlBase64ToUint8Array(base64String){const padding='='.repeat((4-base64String.length%4)%4);const base64=(base64String+padding).replace(/\\-/g,'+').replace(/_/g,'/');const rawData=window.atob(base64);const outputArray=new Uint8Array(rawData.length);for(let i=0;i<rawData.length;++i){outputArray[i]=rawData.charCodeAt(i);}return outputArray;}const publicVapidKey=process.env.REACT_APP_PUBLIC_VAPID_KEY;// Ensure this is set in your environment variables\nconst subscribeUser=async()=>{if('serviceWorker'in navigator){try{const registration=await navigator.serviceWorker.ready;const subscription=await registration.pushManager.subscribe({userVisibleOnly:true,applicationServerKey:urlBase64ToUint8Array(publicVapidKey)});await fetch('/subscribe',{method:'POST',body:JSON.stringify(subscription),headers:{'Content-Type':'application/json'}});alert(\"Subscribed!\");}catch(error){console.error('Error subscribing to notifications:',error);setError('Failed to subscribe to notifications.');}}};const handleInputChange=e=>{setCity(e.target.value);};const fetchWeather=async e=>{e.preventDefault();setError(null);// Clear previous errors\ntry{const apiKey=process.env.REACT_APP_OPENWEATHER_API_KEY;const url=`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;const response=await fetch(url);if(!response.ok){throw new Error('Failed to fetch weather data');}const data=await response.json();setWeather(data);}catch(error){console.error(\"Error fetching weather data:\",error);setError(error.message);}};return/*#__PURE__*/_jsx(Container,{className:\"p-3\",children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-md-center\",children:/*#__PURE__*/_jsxs(Col,{xs:12,md:6,children:[/*#__PURE__*/_jsxs(Form,{onSubmit:fetchWeather,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"cityName\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter city name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"City name\",value:city,onChange:handleInputChange})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Get Weather\"}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:subscribeUser,className:\"ml-2\",children:\"Subscribe for Notifications\"})]}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),weather&&/*#__PURE__*/_jsx(Card,{className:\"mt-3\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:weather.name}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"Temperature: \",weather.main.temp,\" \\xB0C\",/*#__PURE__*/_jsx(\"br\",{}),\"Weather: \",weather.weather[0].description,/*#__PURE__*/_jsx(\"br\",{}),\"Humidity: \",weather.main.humidity,\"%\"]})]})})]})})});};export default Weather;","map":{"version":3,"names":["React","useState","Container","Row","Col","Form","Button","Card","Alert","jsx","_jsx","jsxs","_jsxs","Weather","city","setCity","weather","setWeather","error","setError","urlBase64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","publicVapidKey","process","env","REACT_APP_PUBLIC_VAPID_KEY","subscribeUser","navigator","registration","serviceWorker","ready","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","fetch","method","body","JSON","stringify","headers","alert","console","handleInputChange","e","target","value","fetchWeather","preventDefault","apiKey","REACT_APP_OPENWEATHER_API_KEY","url","response","ok","Error","data","json","message","className","children","xs","md","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","variant","onClick","Body","Title","name","Text","main","temp","description","humidity"],"sources":["/Users/weather-app-pwa/frontend/src/Weather.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Row, Col, Form, Button, Card, Alert } from 'react-bootstrap';\n\nconst Weather = () => {\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState(null);\n    const [error, setError] = useState(null);\n\n    // Function to convert VAPID key from URL safe base64 to Uint8Array\n    function urlBase64ToUint8Array(base64String) {\n        const padding = '='.repeat((4 - base64String.length % 4) % 4);\n        const base64 = (base64String + padding)\n            .replace(/\\-/g, '+')\n            .replace(/_/g, '/');\n    \n        const rawData = window.atob(base64);\n        const outputArray = new Uint8Array(rawData.length);\n    \n        for (let i = 0; i < rawData.length; ++i) {\n            outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    }\n\n    const publicVapidKey = process.env.REACT_APP_PUBLIC_VAPID_KEY;  // Ensure this is set in your environment variables\n\n    const subscribeUser = async () => {\n        if ('serviceWorker' in navigator) {\n            try {\n                const registration = await navigator.serviceWorker.ready;\n                const subscription = await registration.pushManager.subscribe({\n                    userVisibleOnly: true,\n                    applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n                });\n                await fetch('/subscribe', {\n                    method: 'POST',\n                    body: JSON.stringify(subscription),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n                alert(\"Subscribed!\");\n            } catch (error) {\n                console.error('Error subscribing to notifications:', error);\n                setError('Failed to subscribe to notifications.');\n            }\n        }\n    };\n\n    const handleInputChange = (e) => {\n        setCity(e.target.value);\n    };\n\n    const fetchWeather = async (e) => {\n        e.preventDefault();\n        setError(null);  // Clear previous errors\n        try {\n            const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n            const response = await fetch(url);\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch weather data');\n            }\n\n            const data = await response.json();\n            setWeather(data);\n        } catch (error) {\n            console.error(\"Error fetching weather data:\", error);\n            setError(error.message);\n        }\n    };\n\n    return (\n        <Container className=\"p-3\">\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    <Form onSubmit={fetchWeather}>\n                        <Form.Group controlId=\"cityName\">\n                            <Form.Label>Enter city name</Form.Label>\n                            <Form.Control \n                                type=\"text\" \n                                placeholder=\"City name\" \n                                value={city} \n                                onChange={handleInputChange} \n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Get Weather\n                        </Button>\n                        <Button variant=\"secondary\" onClick={subscribeUser} className=\"ml-2\">\n                            Subscribe for Notifications\n                        </Button>\n                    </Form>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    {weather && (\n                        <Card className=\"mt-3\">\n                            <Card.Body>\n                                <Card.Title>{weather.name}</Card.Title>\n                                <Card.Text>\n                                    Temperature: {weather.main.temp} Â°C\n                                    <br />\n                                    Weather: {weather.weather[0].description}\n                                    <br />\n                                    Humidity: {weather.main.humidity}%\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}